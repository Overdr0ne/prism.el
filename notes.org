
* Code

** Scratch

#+BEGIN_SRC elisp
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (elfeed--shuffle (list red orange yellow green blue cyan violet magenta))
                     :num 16))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (-cycle (list red orange yellow green blue cyan violet magenta))
                     :num 16))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (list red orange yellow green blue cyan violet magenta)
                     :num 16 :shuffle t))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (list red orange yellow green blue cyan violet magenta)
                     :num 16 :attribute :background

                     :lightens (list -10 -20 -30)))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (--map (solarized-color-blend it (face-attribute 'default :background) 50)
                                    (list red orange yellow green blue cyan violet magenta))
                     :num 16 :attribute :background))
  (prism-set-faces :colors (solarized-with-color-variables 'dark
                             (--map (solarized-color-blend it (face-attribute 'default :background) .15)
                                    (list red orange yellow green blue cyan violet magenta)))
                   :desaturations (list 5 10 15) :lightens (list 5 10 15)
                   :num 16 :attribute :background)
  (solarized-with-color-variables 'dark
    (list red orange yellow green blue cyan violet magenta))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (weird-sort (-sort (-on #'< (lambda (color)
                                                           (->> color
                                                                color-name-to-rgb
                                                                (apply #'color-rgb-to-hsl)
                                                                car)))
                                                (list red orange yellow green blue cyan violet magenta)))
                     :num 16))
  (solarized-with-color-variables 'dark
    (prism-set-faces :colors (-sort (-on #'< (lambda (color)
                                               (->> color
                                                    color-name-to-rgb
                                                    (apply #'color-rgb-to-hsl)
                                                    car)))
                                    (list red orange yellow green blue cyan violet magenta))
                     :num 16))

  (defun weird-sort (list)
    (-let* (((a b) (-split-at (/ (length list) 2) list))
            (b (nreverse b)))
      (-interleave a b)))

  (weird-sort '( 1 2 3 4 5 6 7 8)) ;;=> (1 8 2 7 3 6 4 5)
#+END_SRC
